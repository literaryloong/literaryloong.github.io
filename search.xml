<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/21/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a>

<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>docker 安装</title>
    <url>/2020/04/21/docker-install/</url>
    <content><![CDATA[<h1 id="Ubuntu-安装Docker-CE"><a href="#Ubuntu-安装Docker-CE" class="headerlink" title="Ubuntu 安装Docker CE"></a>Ubuntu 安装Docker CE</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>系统要求<ul>
<li>ununtu 16.04 LTS </li>
</ul>
</li>
<li>卸载旧版本</li>
</ul>
<a id="more"></a>

<blockquote>
<p>如果安装有旧版本的docker(旧版本的 Docker 称为 <code>docker</code> 或者 <code>docker-engine</code>) ，先卸载它</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>

<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><h3 id="1-1-使用-apt-安装"><a href="#1-1-使用-apt-安装" class="headerlink" title="1.1 使用 apt 安装"></a>1.1 使用 <code>apt</code> 安装</h3><blockquote>
<p>由于 <code>apt</code> 源使用 HTTPS 以确保软件下载过程中不被篡改。因此，我们首先需要添加使用 HTTPS 传输的软件包以及 CA 证书</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line"></span><br><span class="line">$ sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common</span><br></pre></td></tr></table></figure>

<blockquote>
<p>为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥。</p>
</blockquote>
<blockquote>
<p>鉴于国内网络问题，建议使用国内源，注释部分是官方源</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 官方源</span></span><br><span class="line"><span class="comment"># $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span></span><br><span class="line"><span class="comment"># 中科大的源</span></span><br><span class="line">$ curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>

<blockquote>
<p>下面添加 docker 软件源</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># $ sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"</span></span><br><span class="line">$ sudo add-apt-repository <span class="string">"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu <span class="variable">$(lsb_release -cs)</span> stable"</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>以上命令会添加稳定版本的 Docker CE APT 镜像源，如果需要测试或每日构建版本的 Docker CE 请将 stable 改为 test 或者 nightly。</p>
</blockquote>
<blockquote>
<p>更新 apt 软件包缓存，并安装 <code>docker-ce</code></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：也可以指定版本安装</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># $ apt-cache madison docker-ce</span><br><span class="line"># $ sudo apt-get install docker-ce&#x3D;&lt;VERSION_STRING&gt; docker-ce-cli&#x3D;&lt;VERSION_STRING&gt; containerd.io</span><br><span class="line">$ sudo docker run hello-world</span><br></pre></td></tr></table></figure>
<h3 id="1-2-手动安装"><a href="#1-2-手动安装" class="headerlink" title="1.2  手动安装"></a>1.2  手动安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://download.docker.com/linux/ubuntu/dists/ 在这里选择下载安装包</span></span><br><span class="line">$ sudo dpkg -i /path/to/package.deb</span><br></pre></td></tr></table></figure>
<h3 id="1-3-使用脚本自动安装"><a href="#1-3-使用脚本自动安装" class="headerlink" title="1.3 使用脚本自动安装"></a>1.3 使用脚本自动安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">$ sudo sh get-docker.sh</span><br><span class="line"><span class="comment"># $ sudo sh get-docker.sh --mirror Aliyun</span></span><br><span class="line"><span class="comment"># $ sudo sh get-docker.sh --mirror AzureChinaCloud</span></span><br></pre></td></tr></table></figure>

<h3 id="1-4-测试安装成功"><a href="#1-4-测试安装成功" class="headerlink" title="1.4 测试安装成功"></a>1.4 测试安装成功</h3><h2 id="2-使用非-root-用户管理-docker"><a href="#2-使用非-root-用户管理-docker" class="headerlink" title="2 使用非 root 用户管理 docker"></a>2 使用非 <code>root</code> 用户管理 docker</h2><h3 id="2-1-创建-docker-用户组"><a href="#2-1-创建-docker-用户组" class="headerlink" title="2.1 创建 docker 用户组"></a>2.1 创建 docker 用户组</h3><blockquote>
<p>现在安装完成，会自动创建docker 用户组</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># $ sudo groupadd docker</span></span><br><span class="line"><span class="comment"># 将当前用户添加到 docker 组</span></span><br><span class="line">$ sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>重新登录，进行测试</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ newgrp docker </span><br><span class="line">$ docker run hello-world</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果遇到以下错误提示：</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING: Error loading config file: /home/user/.docker/config.json -</span><br><span class="line"><span class="built_in">stat</span> /home/user/.docker/config.json: permission denied</span><br></pre></td></tr></table></figure>
<p>两个方法解决：</p>
<blockquote>
<ol>
<li>把 用户目录下的 <code>.docker</code> 文件夹删除</li>
<li>使用下面的命令修复</li>
</ol>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo chown <span class="string">"<span class="variable">$USER</span>"</span>:<span class="string">"<span class="variable">$USER</span>"</span> /home/<span class="string">"<span class="variable">$USER</span>"</span>/.docker -R</span><br><span class="line">$ sudo chmod g+rwx <span class="string">"<span class="variable">$HOME</span>/.docker"</span> -R</span><br></pre></td></tr></table></figure>

<h2 id="3-配置docker-自启"><a href="#3-配置docker-自启" class="headerlink" title="3 配置docker 自启"></a>3 配置docker 自启</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line"><span class="comment"># 取消自启</span></span><br><span class="line">$ sudo systemctl <span class="built_in">disable</span> docker</span><br></pre></td></tr></table></figure>

<h2 id="4-配置镜像加速"><a href="#4-配置镜像加速" class="headerlink" title="4 配置镜像加速"></a>4 配置镜像加速</h2><blockquote>
<p>前面看到了我们使用镜像时，镜像拉取特别慢，有些甚至无法获取。这时候我们可以配置镜像加速。</p>
<p>国内一些云服务商提供了国内的镜像加速服务</p>
<p>如：</p>
</blockquote>
<ul>
<li><a href="https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md#22-container-registry-proxy" target="_blank" rel="noopener">Azure 中国镜像 <code>https://dockerhub.azk8s.cn</code></a></li>
<li><a href="https://cr.console.aliyun.com/cn-hangzhou/mirrors" target="_blank" rel="noopener">阿里云加速器(需登录账号获取)</a></li>
<li><a href="https://www.163yun.com/help/documents/56918246390157312" target="_blank" rel="noopener">网易云加速器 <code>https://hub-mirror.c.163.com</code></a></li>
</ul>
<h3 id="4-1-配置"><a href="#4-1-配置" class="headerlink" title="4.1 配置"></a>4.1 配置</h3><blockquote>
<ul>
<li>新的版本修改配置文件 <code>/etc/docker/daemon.json</code> ：</li>
</ul>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [</span><br><span class="line">    <span class="string">"https://dockerhub.azk8s.cn"</span>,</span><br><span class="line">    <span class="string">"https://hub-mirror.c.163.com"</span>,</span><br><span class="line">    <span class="string">"https://ktrsh7na.mirror.aliyuncs.com"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>老版教程 编辑  <code>/etc/systemd/system/multi-user.target.wants/docker.service</code> 文件</li>
</ul>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 找到  ExecStart= 追加  --registry-mirror=https://ktrsh7na.mirror.aliyuncs.com</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意： 上面提到的两种方法，只能使用一种，不能同时修改</p>
</blockquote>
<blockquote>
<p>然后重启docker服务</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl daemon-reload</span><br><span class="line">$ sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<blockquote>
<p>下面检查加速器是否生效</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker info</span><br></pre></td></tr></table></figure>

<h3 id="4-2-应用"><a href="#4-2-应用" class="headerlink" title="4.2 应用"></a>4.2 应用</h3><blockquote>
<p>国内无法直接获取 <code>gcr.io/*</code> 镜像，我们可以将 <code>gcr.io//:</code> 替换为 <code>gcr.azk8s.cn//:</code> </p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># $ docker pull gcr.io/google_containers/hyperkube-amd64:v1.9.2</span></span><br><span class="line">$ docker pull gcr.azk8s.cn/google_containers/hyperkube-amd64:v1.9.2</span><br></pre></td></tr></table></figure>



<h2 id="5-卸载docker"><a href="#5-卸载docker" class="headerlink" title="5 卸载docker"></a>5 卸载docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get purge docker-ce</span><br><span class="line"><span class="comment"># 上面命令不会自动删除 主机上的镜像、容器、卷或自定义配置文件。 删除所有镜像、容器和卷</span></span><br><span class="line">$ sudo rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
</search>
